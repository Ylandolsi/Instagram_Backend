// <auto-generated />
using System;
using Instagram_Backend.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Instagram_Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250414095649_FIXSeeddd")]
    partial class FIXSeeddd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Instagram_Backend.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LikeCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("ParentCommentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<int>("ReplyCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentCommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f0e1bdaf-2c5b-4242-b5ea-baf07e38126a"),
                            Content = "Amazing view!",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 3,
                            PostId = new Guid("0e0445bd-fee5-43df-a3cb-90449f4f9133"),
                            ReplyCount = 1,
                            UserId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            Id = new Guid("028f30f0-63f8-42e0-87a9-0cbcd0be493b"),
                            Content = "Thanks! It was incredible.",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 1,
                            ParentCommentId = new Guid("f0e1bdaf-2c5b-4242-b5ea-baf07e38126a"),
                            PostId = new Guid("0e0445bd-fee5-43df-a3cb-90449f4f9133"),
                            ReplyCount = 0,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("64dbfcf3-89eb-4e4d-8b45-403ba71af73f"),
                            Content = "This looks delicious!",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 4,
                            PostId = new Guid("d95811a5-6323-4e5c-be64-53838c5a1e7f"),
                            ReplyCount = 1,
                            UserId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            Id = new Guid("92f1f196-0b61-4400-adbf-41273f7c7754"),
                            Content = "Can you share the recipe?",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            PostId = new Guid("d95811a5-6323-4e5c-be64-53838c5a1e7f"),
                            ReplyCount = 1,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("aabc57e2-fbfe-44ac-b771-d2d0992cbaae"),
                            Content = "Sure, I'll DM you!",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 1,
                            ParentCommentId = new Guid("92f1f196-0b61-4400-adbf-41273f7c7754"),
                            PostId = new Guid("d95811a5-6323-4e5c-be64-53838c5a1e7f"),
                            ReplyCount = 0,
                            UserId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            Id = new Guid("89623aef-2400-42d1-82d1-d29902ac1dab"),
                            Content = "Nice setup! What monitor is that?",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 1,
                            PostId = new Guid("574b4e30-24f7-48c7-a080-342e8aa38f0d"),
                            ReplyCount = 1,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("4c7f5e68-47cd-44d6-b01b-eeef1f036d47"),
                            Content = "It's an LG 34\" ultrawide",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            ParentCommentId = new Guid("89623aef-2400-42d1-82d1-d29902ac1dab"),
                            PostId = new Guid("574b4e30-24f7-48c7-a080-342e8aa38f0d"),
                            ReplyCount = 0,
                            UserId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            Id = new Guid("822aea4b-d01b-47c2-ad5e-3aee5aa81e7e"),
                            Content = "This is incredible! Love the neon colors!",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 2,
                            PostId = new Guid("40b690e5-5569-43ea-9d2d-98707748fd16"),
                            ReplyCount = 1,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("c0cd4f7e-79ab-4e45-a5d3-4041a28dd533"),
                            Content = "Thank you so much! Took me almost a week to finish.",
                            CreatedAt = new DateTime(2025, 3, 15, 1, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 1,
                            ParentCommentId = new Guid("822aea4b-d01b-47c2-ad5e-3aee5aa81e7e"),
                            PostId = new Guid("40b690e5-5569-43ea-9d2d-98707748fd16"),
                            ReplyCount = 0,
                            UserId = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57")
                        },
                        new
                        {
                            Id = new Guid("76d24222-1a80-4ae0-9ae4-fc66d7de8f15"),
                            Content = "What's your favorite HIIT exercise?",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 1,
                            PostId = new Guid("07e032e0-3e5d-43ec-892d-6f2ad1419aea"),
                            ReplyCount = 1,
                            UserId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            Id = new Guid("6dabc5bd-4a70-4495-ad2f-94915f00681d"),
                            Content = "Definitely burpees - they're brutal but effective!",
                            CreatedAt = new DateTime(2025, 3, 15, 2, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 2,
                            ParentCommentId = new Guid("76d24222-1a80-4ae0-9ae4-fc66d7de8f15"),
                            PostId = new Guid("07e032e0-3e5d-43ec-892d-6f2ad1419aea"),
                            ReplyCount = 0,
                            UserId = new Guid("9b38eaf6-3af7-478e-8718-27583d270940")
                        },
                        new
                        {
                            Id = new Guid("fa487080-8ee4-47f2-9d19-ef31cff7bd29"),
                            Content = "These designs are stunning! Will they be available in your online shop?",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 3,
                            PostId = new Guid("8d39b017-b461-4d07-bf32-1551fd75f6b1"),
                            ReplyCount = 1,
                            UserId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            Id = new Guid("872d8053-ba5c-4263-bb4e-0d9982097ccc"),
                            Content = "Yes! They'll be available next month. I'll share a discount code soon!",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 1,
                            ParentCommentId = new Guid("fa487080-8ee4-47f2-9d19-ef31cff7bd29"),
                            PostId = new Guid("8d39b017-b461-4d07-bf32-1551fd75f6b1"),
                            ReplyCount = 0,
                            UserId = new Guid("13fe2ce5-4f13-4ff6-b247-b9b12c365cfe")
                        },
                        new
                        {
                            Id = new Guid("57be02c3-fc5f-4498-9e42-932884a57061"),
                            Content = "That crust looks perfect! Would love to see your sourdough recipe.",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 2,
                            PostId = new Guid("8b78b587-16f7-48a9-b838-f7e2f3127d93"),
                            ReplyCount = 1,
                            UserId = new Guid("225ec745-cee9-4cc7-b687-83c1ab7d0bc3")
                        },
                        new
                        {
                            Id = new Guid("846ed4c5-d195-4c44-882c-f2aa69edee2d"),
                            Content = "I'll share it in my next post! It's all about the 24-hour fermentation.",
                            CreatedAt = new DateTime(2025, 3, 15, 1, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 1,
                            ParentCommentId = new Guid("57be02c3-fc5f-4498-9e42-932884a57061"),
                            PostId = new Guid("8b78b587-16f7-48a9-b838-f7e2f3127d93"),
                            ReplyCount = 0,
                            UserId = new Guid("3166a07a-ada2-4d3a-9af1-591683c31bcd")
                        });
                });

            modelBuilder.Entity("Instagram_Backend.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae40868a-d9e9-4de8-a052-56e09c0fbc17"),
                            Order = 1,
                            PostId = new Guid("0e0445bd-fee5-43df-a3cb-90449f4f9133"),
                            Url = "https://picsum.photos/id/1/800/800"
                        },
                        new
                        {
                            Id = new Guid("f3499fcc-ac2c-47ee-ad6e-640960fa0206"),
                            Order = 1,
                            PostId = new Guid("d95811a5-6323-4e5c-be64-53838c5a1e7f"),
                            Url = "https://picsum.photos/id/2/800/800"
                        },
                        new
                        {
                            Id = new Guid("df8868cf-3150-43d6-a25d-0ea3a3600d42"),
                            Order = 2,
                            PostId = new Guid("d95811a5-6323-4e5c-be64-53838c5a1e7f"),
                            Url = "https://picsum.photos/id/3/800/800"
                        },
                        new
                        {
                            Id = new Guid("a7061f1b-d3d8-4402-82ab-ce412bc0d8e5"),
                            Order = 1,
                            PostId = new Guid("574b4e30-24f7-48c7-a080-342e8aa38f0d"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("47655644-78a9-4008-a555-7d5d1d81d5ae"),
                            Order = 1,
                            PostId = new Guid("cf9fa288-d4c2-49e9-81f6-6fa48db7a317"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("172c5c39-2bcd-420a-8fe8-779d5f6f826e"),
                            Order = 1,
                            PostId = new Guid("1dbc524c-385d-4dc5-9798-2e35534ded72"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("23016aba-06d4-4173-8611-4ffa5ad7da13"),
                            Order = 2,
                            PostId = new Guid("1dbc524c-385d-4dc5-9798-2e35534ded72"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("e7a0090e-fec4-440e-9849-e0cd0506db7c"),
                            Order = 3,
                            PostId = new Guid("1dbc524c-385d-4dc5-9798-2e35534ded72"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("af19d580-c750-4518-b48f-457bbb263845"),
                            Order = 4,
                            PostId = new Guid("1dbc524c-385d-4dc5-9798-2e35534ded72"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("34ea3932-ef5b-4723-aca1-a1010b710e80"),
                            Order = 1,
                            PostId = new Guid("134c28d0-c0e6-4502-9053-80405b9f8f3f"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("8cead494-2ebb-443c-94cb-ac5ba53c518d"),
                            Order = 1,
                            PostId = new Guid("78ef649d-e91d-467f-90e9-c15d60a6f336"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("9d98a17a-27d0-4a92-8bbb-d22af60367b1"),
                            Order = 1,
                            PostId = new Guid("82c9d1f2-e6e9-4c48-a603-54940108a5a0"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("d27ce7dd-d143-4716-bf24-1e1852d10f93"),
                            Order = 1,
                            PostId = new Guid("fb390cba-54ff-4b4a-82ce-86b15207b5af"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("51c8415c-5eff-490a-989e-4ce2048af085"),
                            Order = 1,
                            PostId = new Guid("263bdd23-b6c7-432a-a0a1-1c4b974d8603"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("b8ec5f71-db16-4087-a4c3-ff6cfc621de6"),
                            Order = 1,
                            PostId = new Guid("6f47d184-f438-4504-adee-f9ea35a396fb"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("5dd5b603-24b7-43ab-b64d-535f758cc346"),
                            Order = 1,
                            PostId = new Guid("dc9e389d-31ce-4f4b-8a05-deaad6bf495c"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("e1ab9054-0d6a-4dc0-921a-c5501aec2bc6"),
                            Order = 1,
                            PostId = new Guid("485e4507-31b9-47fe-a3b6-d5a626c56303"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("103cf52c-ce27-4739-bf9a-90d22b64fc9f"),
                            Order = 2,
                            PostId = new Guid("485e4507-31b9-47fe-a3b6-d5a626c56303"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("49bab9ad-0756-4b30-af49-c37901c3b9c8"),
                            Order = 1,
                            PostId = new Guid("369c3ad3-81a4-4a7c-b26e-40f0320352cf"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("0ba94e4f-711b-449d-822a-2dc20690cd93"),
                            Order = 2,
                            PostId = new Guid("369c3ad3-81a4-4a7c-b26e-40f0320352cf"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("5d6d4aa2-32ce-4f07-af31-8dca473f1c66"),
                            Order = 1,
                            PostId = new Guid("b3f308e0-a38c-4929-a138-3cfdb7a0955b"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("599feefc-6f8e-4d95-acbf-f627a7a4cf10"),
                            Order = 1,
                            PostId = new Guid("40b690e5-5569-43ea-9d2d-98707748fd16"),
                            Url = "https://picsum.photos/id/10/800/800"
                        },
                        new
                        {
                            Id = new Guid("b23e2e74-2a50-4bce-886e-59ecdfa94eaa"),
                            Order = 1,
                            PostId = new Guid("06d0895e-758b-44b6-b7a6-4b9bafa42fb5"),
                            Url = "https://picsum.photos/id/11/800/800"
                        },
                        new
                        {
                            Id = new Guid("1dc0b0a0-586b-4637-af16-2acacf05ae3c"),
                            Order = 1,
                            PostId = new Guid("07e032e0-3e5d-43ec-892d-6f2ad1419aea"),
                            Url = "https://picsum.photos/id/12/800/800"
                        },
                        new
                        {
                            Id = new Guid("160764f6-e60f-4056-8892-27d20cf7c3b9"),
                            Order = 1,
                            PostId = new Guid("3605dfec-f485-49bc-a63d-9953d2d0f046"),
                            Url = "https://picsum.photos/id/13/800/800"
                        },
                        new
                        {
                            Id = new Guid("5541912d-2037-4676-8c64-ec8f826bd935"),
                            Order = 2,
                            PostId = new Guid("3605dfec-f485-49bc-a63d-9953d2d0f046"),
                            Url = "https://picsum.photos/id/14/800/800"
                        },
                        new
                        {
                            Id = new Guid("b1f1b708-e0e2-49fa-950a-9a66d8f4a4b3"),
                            Order = 1,
                            PostId = new Guid("8d39b017-b461-4d07-bf32-1551fd75f6b1"),
                            Url = "https://picsum.photos/id/15/800/800"
                        },
                        new
                        {
                            Id = new Guid("dd92783d-a41f-4ca5-95cc-710721040657"),
                            Order = 2,
                            PostId = new Guid("8d39b017-b461-4d07-bf32-1551fd75f6b1"),
                            Url = "https://picsum.photos/id/16/800/800"
                        },
                        new
                        {
                            Id = new Guid("ac976bca-c0d3-4d00-ac64-5e29690e7120"),
                            Order = 3,
                            PostId = new Guid("8d39b017-b461-4d07-bf32-1551fd75f6b1"),
                            Url = "https://picsum.photos/id/17/800/800"
                        },
                        new
                        {
                            Id = new Guid("53c9ecab-bc4e-40c3-a6f7-af957f9e65a5"),
                            Order = 1,
                            PostId = new Guid("8b78b587-16f7-48a9-b838-f7e2f3127d93"),
                            Url = "https://picsum.photos/id/18/800/800"
                        },
                        new
                        {
                            Id = new Guid("c615963a-6177-4868-9a3b-940746d12189"),
                            Order = 1,
                            PostId = new Guid("9aca14c9-eb4f-4183-a5ca-6a5c0f0835c0"),
                            Url = "https://picsum.photos/id/19/800/800"
                        },
                        new
                        {
                            Id = new Guid("d6713592-a6ee-4639-be6e-a77800ac141f"),
                            Order = 2,
                            PostId = new Guid("9aca14c9-eb4f-4183-a5ca-6a5c0f0835c0"),
                            Url = "https://picsum.photos/id/20/800/800"
                        });
                });

            modelBuilder.Entity("Instagram_Backend.Models.Like", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CommentId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7094619d-0b37-4b89-baa4-973d0f8ac342"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("0e0445bd-fee5-43df-a3cb-90449f4f9133"),
                            Type = 0,
                            UserId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            Id = new Guid("7a77c408-c13b-47d3-a13b-a1a8af2c1bf2"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("0e0445bd-fee5-43df-a3cb-90449f4f9133"),
                            Type = 0,
                            UserId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            Id = new Guid("3aa300bc-01c6-4218-b067-431c09005199"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("d95811a5-6323-4e5c-be64-53838c5a1e7f"),
                            Type = 0,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("bc26b3da-bb9e-4579-8324-cb04c2d44d22"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("d95811a5-6323-4e5c-be64-53838c5a1e7f"),
                            Type = 0,
                            UserId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            Id = new Guid("1a902a24-b71d-43c2-8d93-e2ed06f734b1"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("574b4e30-24f7-48c7-a080-342e8aa38f0d"),
                            Type = 0,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("21f408eb-54a6-43f5-86b4-dbb58be7a4b4"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("574b4e30-24f7-48c7-a080-342e8aa38f0d"),
                            Type = 0,
                            UserId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            Id = new Guid("3bdb7474-b59f-49ce-8ff3-0e5eaf545df1"),
                            CommentId = new Guid("f0e1bdaf-2c5b-4242-b5ea-baf07e38126a"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = 1,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("166396d4-ce4c-42a5-8e96-056c25c36368"),
                            CommentId = new Guid("f0e1bdaf-2c5b-4242-b5ea-baf07e38126a"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = 1,
                            UserId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            Id = new Guid("536b513c-780e-4023-a4bd-4a75f7c83d3d"),
                            CommentId = new Guid("028f30f0-63f8-42e0-87a9-0cbcd0be493b"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = 1,
                            UserId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            Id = new Guid("ae1167e0-02ba-4e88-b7af-9f5f3fc60580"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("40b690e5-5569-43ea-9d2d-98707748fd16"),
                            Type = 0,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("2296b89f-b959-4fb6-b483-caf71ac22efa"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("40b690e5-5569-43ea-9d2d-98707748fd16"),
                            Type = 0,
                            UserId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            Id = new Guid("b21eca66-308d-4ab4-a06d-e10d575f8c6a"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("07e032e0-3e5d-43ec-892d-6f2ad1419aea"),
                            Type = 0,
                            UserId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            Id = new Guid("e1177a87-801b-4460-bbd2-9b6c117101f7"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("07e032e0-3e5d-43ec-892d-6f2ad1419aea"),
                            Type = 0,
                            UserId = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57")
                        },
                        new
                        {
                            Id = new Guid("02a7bd8c-7d82-460d-ad66-376a7e6973e0"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("8d39b017-b461-4d07-bf32-1551fd75f6b1"),
                            Type = 0,
                            UserId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            Id = new Guid("30d19b30-9a93-4495-b179-ca549b8b6ef1"),
                            CommentId = new Guid("822aea4b-d01b-47c2-ad5e-3aee5aa81e7e"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = 1,
                            UserId = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57")
                        },
                        new
                        {
                            Id = new Guid("030a7ee8-ab57-499b-b353-2e692f924e42"),
                            CommentId = new Guid("fa487080-8ee4-47f2-9d19-ef31cff7bd29"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = 1,
                            UserId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        });
                });

            modelBuilder.Entity("Instagram_Backend.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ActorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CommentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("current_timestamp");

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.HasIndex("CommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7dfa9c33-9aa5-43ba-966a-050877429b73"),
                            ActorId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9"),
                            Content = "liked your post",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = true,
                            PostId = new Guid("0e0445bd-fee5-43df-a3cb-90449f4f9133"),
                            Type = 0,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("fe0f1363-22ef-4f6f-8199-c104034d1f37"),
                            ActorId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30"),
                            Content = "liked your post",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = true,
                            PostId = new Guid("0e0445bd-fee5-43df-a3cb-90449f4f9133"),
                            Type = 0,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("03204a2d-924e-49d0-b50e-7f927b5b3d80"),
                            ActorId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9"),
                            CommentId = new Guid("f0e1bdaf-2c5b-4242-b5ea-baf07e38126a"),
                            Content = "commented on your post",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = true,
                            PostId = new Guid("0e0445bd-fee5-43df-a3cb-90449f4f9133"),
                            Type = 1,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("07f66f1d-3eb0-411c-8a22-b3aa885526c5"),
                            ActorId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a"),
                            CommentId = new Guid("028f30f0-63f8-42e0-87a9-0cbcd0be493b"),
                            Content = "replied to your comment",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = true,
                            PostId = new Guid("0e0445bd-fee5-43df-a3cb-90449f4f9133"),
                            Type = 1,
                            UserId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            Id = new Guid("f0e35c49-d9d6-4b4d-8938-5af8d3f4d63d"),
                            ActorId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a"),
                            Content = "started following you",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = true,
                            Type = 2,
                            UserId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            Id = new Guid("9d1d61e8-ddde-43ea-a319-cc425bc69c27"),
                            ActorId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a"),
                            Content = "liked your post",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = false,
                            PostId = new Guid("40b690e5-5569-43ea-9d2d-98707748fd16"),
                            Type = 0,
                            UserId = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57")
                        },
                        new
                        {
                            Id = new Guid("8f0ddd5c-0501-46bd-9156-96734e5eabcf"),
                            ActorId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9"),
                            Content = "liked your post",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = false,
                            PostId = new Guid("40b690e5-5569-43ea-9d2d-98707748fd16"),
                            Type = 0,
                            UserId = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57")
                        },
                        new
                        {
                            Id = new Guid("eb179352-30fd-4e6b-a91c-ec32c71df733"),
                            ActorId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a"),
                            CommentId = new Guid("822aea4b-d01b-47c2-ad5e-3aee5aa81e7e"),
                            Content = "commented on your post",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = true,
                            PostId = new Guid("40b690e5-5569-43ea-9d2d-98707748fd16"),
                            Type = 1,
                            UserId = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57")
                        },
                        new
                        {
                            Id = new Guid("ee9465ae-d778-4869-b812-56f0dc8c8ee7"),
                            ActorId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30"),
                            CommentId = new Guid("76d24222-1a80-4ae0-9ae4-fc66d7de8f15"),
                            Content = "commented on your post",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = true,
                            PostId = new Guid("07e032e0-3e5d-43ec-892d-6f2ad1419aea"),
                            Type = 1,
                            UserId = new Guid("9b38eaf6-3af7-478e-8718-27583d270940")
                        });
                });

            modelBuilder.Entity("Instagram_Backend.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("CommentCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LikeCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0e0445bd-fee5-43df-a3cb-90449f4f9133"),
                            Caption = "Beautiful sunset at the beach!",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("d95811a5-6323-4e5c-be64-53838c5a1e7f"),
                            Caption = "My homemade pasta recipe 🍝",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            Id = new Guid("574b4e30-24f7-48c7-a080-342e8aa38f0d"),
                            Caption = "My homemade pasta recipe 🍝",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            Id = new Guid("cf9fa288-d4c2-49e9-81f6-6fa48db7a317"),
                            Caption = "Beautiful sunset at the beach!",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("1dbc524c-385d-4dc5-9798-2e35534ded72"),
                            Caption = "Beautiful sunset at the beach!",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("134c28d0-c0e6-4502-9053-80405b9f8f3f"),
                            Caption = "Beautiful sunset at the beach!",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("78ef649d-e91d-467f-90e9-c15d60a6f336"),
                            Caption = "Beautiful sunset at the beach!",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("82c9d1f2-e6e9-4c48-a603-54940108a5a0"),
                            Caption = "Beautiful sunset at the beach!",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            Id = new Guid("fb390cba-54ff-4b4a-82ce-86b15207b5af"),
                            Caption = "New coding setup complete",
                            CommentCount = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 28,
                            UserId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            Id = new Guid("263bdd23-b6c7-432a-a0a1-1c4b974d8603"),
                            Caption = "My homemade pasta recipe 🍝",
                            CommentCount = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 42,
                            UserId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            Id = new Guid("6f47d184-f438-4504-adee-f9ea35a396fb"),
                            Caption = "New coding setup complete",
                            CommentCount = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 28,
                            UserId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            Id = new Guid("dc9e389d-31ce-4f4b-8a05-deaad6bf495c"),
                            Caption = "New coding setup complete",
                            CommentCount = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 28,
                            UserId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            Id = new Guid("485e4507-31b9-47fe-a3b6-d5a626c56303"),
                            Caption = "New coding setup complete",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            Id = new Guid("369c3ad3-81a4-4a7c-b26e-40f0320352cf"),
                            Caption = "New coding setup complete",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            Id = new Guid("b3f308e0-a38c-4929-a138-3cfdb7a0955b"),
                            Caption = "New coding setup complete",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            Id = new Guid("40b690e5-5569-43ea-9d2d-98707748fd16"),
                            Caption = "My latest digital art piece - cyberpunk cityscape 🌆",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57")
                        },
                        new
                        {
                            Id = new Guid("06d0895e-758b-44b6-b7a6-4b9bafa42fb5"),
                            Caption = "New plant baby added to my collection! 🌱",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57")
                        },
                        new
                        {
                            Id = new Guid("07e032e0-3e5d-43ec-892d-6f2ad1419aea"),
                            Caption = "Today's workout: 5 mile run and full-body HIIT 💪",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("9b38eaf6-3af7-478e-8718-27583d270940")
                        },
                        new
                        {
                            Id = new Guid("3605dfec-f485-49bc-a63d-9953d2d0f046"),
                            Caption = "Meal prep for the week! Healthy eating doesn't have to be boring 🥗",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("9b38eaf6-3af7-478e-8718-27583d270940")
                        },
                        new
                        {
                            Id = new Guid("8d39b017-b461-4d07-bf32-1551fd75f6b1"),
                            Caption = "My latest fashion collection inspired by Mediterranean summers ☀️",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("13fe2ce5-4f13-4ff6-b247-b9b12c365cfe")
                        },
                        new
                        {
                            Id = new Guid("8b78b587-16f7-48a9-b838-f7e2f3127d93"),
                            Caption = "Homemade sourdough pizza with fresh basil and buffalo mozzarella 🍕",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("3166a07a-ada2-4d3a-9af1-591683c31bcd")
                        },
                        new
                        {
                            Id = new Guid("9aca14c9-eb4f-4183-a5ca-6a5c0f0835c0"),
                            Caption = "Sunrise hike at Mount Rainier. Worth waking up at 4am! 🏔️",
                            CommentCount = 0,
                            CreatedAt = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            UserId = new Guid("225ec745-cee9-4cc7-b687-83c1ab7d0bc3")
                        });
                });

            modelBuilder.Entity("Instagram_Backend.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("ProfilePictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RefreshTokenExpiresAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a"),
                            AccessFailedCount = 0,
                            Bio = "Photography enthusiast and traveler",
                            ConcurrencyStamp = "e238415a-bfb5-4ccd-8c5e-8ddfa037b31d",
                            Email = "john@example.com",
                            EmailConfirmed = true,
                            FirstName = "John",
                            LastName = "Doe",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOHN@EXAMPLE.COM",
                            NormalizedUserName = "JOHNDOE",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/men/1.jpg",
                            SecurityStamp = "1653bc25-5dba-43e5-88f1-579155df92f9",
                            TwoFactorEnabled = false,
                            UserName = "johndoe"
                        },
                        new
                        {
                            Id = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9"),
                            AccessFailedCount = 0,
                            Bio = "Food blogger | Travel lover",
                            ConcurrencyStamp = "0fbe91ef-ef24-4902-8ea2-9289e4b4eaa6",
                            Email = "jane@example.com",
                            EmailConfirmed = true,
                            FirstName = "Jane",
                            LastName = "Smith",
                            LockoutEnabled = false,
                            NormalizedEmail = "JANE@EXAMPLE.COM",
                            NormalizedUserName = "JANESMITH",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/women/1.jpg",
                            SecurityStamp = "9ef828db-a86b-4d3b-b28b-fdc77c73e5db",
                            TwoFactorEnabled = false,
                            UserName = "janesmith"
                        },
                        new
                        {
                            Id = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30"),
                            AccessFailedCount = 0,
                            Bio = "Software developer and coffee addict",
                            ConcurrencyStamp = "bcd608c0-f50d-4bce-9f64-3b47f8615afb",
                            Email = "alex@example.com",
                            EmailConfirmed = true,
                            FirstName = "Alex",
                            LastName = "Johnson",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALEX@EXAMPLE.COM",
                            NormalizedUserName = "ALEXJ",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/men/2.jpg",
                            SecurityStamp = "4ef796d1-b4c6-4da5-8849-7c22377025a3",
                            TwoFactorEnabled = false,
                            UserName = "alexj"
                        },
                        new
                        {
                            Id = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57"),
                            AccessFailedCount = 0,
                            Bio = "Digital artist and designer",
                            ConcurrencyStamp = "fda8125b-9d2c-4811-9b50-b538899aa2c0",
                            Email = "emily@example.com",
                            EmailConfirmed = true,
                            FirstName = "Emily",
                            LastName = "Chen",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMILY@EXAMPLE.COM",
                            NormalizedUserName = "EMILYC",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/women/2.jpg",
                            SecurityStamp = "61ce76cd-91fa-4c86-a7d3-93e32332cb98",
                            TwoFactorEnabled = false,
                            UserName = "emilyc"
                        },
                        new
                        {
                            Id = new Guid("9b38eaf6-3af7-478e-8718-27583d270940"),
                            AccessFailedCount = 0,
                            Bio = "Fitness enthusiast and nutrition coach",
                            ConcurrencyStamp = "ed4e68f3-34b9-48ef-80a8-3fe4a1201487",
                            Email = "michael@example.com",
                            EmailConfirmed = true,
                            FirstName = "Michael",
                            LastName = "Taylor",
                            LockoutEnabled = false,
                            NormalizedEmail = "MICHAEL@EXAMPLE.COM",
                            NormalizedUserName = "MICHAELT",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/men/3.jpg",
                            SecurityStamp = "8e43d83b-f78c-4360-acfc-202076334dcd",
                            TwoFactorEnabled = false,
                            UserName = "michaelt"
                        },
                        new
                        {
                            Id = new Guid("13fe2ce5-4f13-4ff6-b247-b9b12c365cfe"),
                            AccessFailedCount = 0,
                            Bio = "Fashion designer and trend spotter",
                            ConcurrencyStamp = "95fe12fe-243f-4261-8c73-aa88d0de0ff0",
                            Email = "sophia@example.com",
                            EmailConfirmed = true,
                            FirstName = "Sophia",
                            LastName = "Garcia",
                            LockoutEnabled = false,
                            NormalizedEmail = "SOPHIA@EXAMPLE.COM",
                            NormalizedUserName = "SOPHIAG",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/women/3.jpg",
                            SecurityStamp = "4b07fef6-0eb4-4157-a57f-e415ca89fd4c",
                            TwoFactorEnabled = false,
                            UserName = "sophiag"
                        },
                        new
                        {
                            Id = new Guid("3166a07a-ada2-4d3a-9af1-591683c31bcd"),
                            AccessFailedCount = 0,
                            Bio = "Chef and food photographer",
                            ConcurrencyStamp = "a91fe56d-4085-4a66-b728-37f0a04a343c",
                            Email = "david@example.com",
                            EmailConfirmed = true,
                            FirstName = "David",
                            LastName = "Wilson",
                            LockoutEnabled = false,
                            NormalizedEmail = "DAVID@EXAMPLE.COM",
                            NormalizedUserName = "DAVIDW",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/men/4.jpg",
                            SecurityStamp = "26d0aefe-4adf-4ede-9ba8-d5066b19216e",
                            TwoFactorEnabled = false,
                            UserName = "davidw"
                        },
                        new
                        {
                            Id = new Guid("225ec745-cee9-4cc7-b687-83c1ab7d0bc3"),
                            AccessFailedCount = 0,
                            Bio = "Travel blogger and outdoor enthusiast",
                            ConcurrencyStamp = "3a501ab1-17d2-48a1-83ed-c8be0478aee8",
                            Email = "olivia@example.com",
                            EmailConfirmed = true,
                            FirstName = "Olivia",
                            LastName = "Martinez",
                            LockoutEnabled = false,
                            NormalizedEmail = "OLIVIA@EXAMPLE.COM",
                            NormalizedUserName = "OLIVIAM",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/women/4.jpg",
                            SecurityStamp = "4630b4bf-0e43-4249-b760-437ef6df658c",
                            TwoFactorEnabled = false,
                            UserName = "oliviam"
                        });
                });

            modelBuilder.Entity("Instagram_Backend.Models.UserFollower", b =>
                {
                    b.Property<Guid>("FollowerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FollowingId")
                        .HasColumnType("uuid");

                    b.HasKey("FollowerId", "FollowingId");

                    b.HasIndex("FollowingId");

                    b.ToTable("UserFollowers");

                    b.HasData(
                        new
                        {
                            FollowerId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9"),
                            FollowingId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            FollowerId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30"),
                            FollowingId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            FollowerId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a"),
                            FollowingId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            FollowerId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a"),
                            FollowingId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            FollowerId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9"),
                            FollowingId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            FollowerId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30"),
                            FollowingId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            FollowerId = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57"),
                            FollowingId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            FollowerId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a"),
                            FollowingId = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57")
                        },
                        new
                        {
                            FollowerId = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57"),
                            FollowingId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            FollowerId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9"),
                            FollowingId = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57")
                        },
                        new
                        {
                            FollowerId = new Guid("9b38eaf6-3af7-478e-8718-27583d270940"),
                            FollowingId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30")
                        },
                        new
                        {
                            FollowerId = new Guid("69d3cdf9-1fc2-4ccf-857b-79f4dc24ee30"),
                            FollowingId = new Guid("9b38eaf6-3af7-478e-8718-27583d270940")
                        },
                        new
                        {
                            FollowerId = new Guid("9b38eaf6-3af7-478e-8718-27583d270940"),
                            FollowingId = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57")
                        },
                        new
                        {
                            FollowerId = new Guid("13fe2ce5-4f13-4ff6-b247-b9b12c365cfe"),
                            FollowingId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9")
                        },
                        new
                        {
                            FollowerId = new Guid("c76fa8a9-02c7-4c34-af26-692a567949e9"),
                            FollowingId = new Guid("13fe2ce5-4f13-4ff6-b247-b9b12c365cfe")
                        },
                        new
                        {
                            FollowerId = new Guid("13fe2ce5-4f13-4ff6-b247-b9b12c365cfe"),
                            FollowingId = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57")
                        },
                        new
                        {
                            FollowerId = new Guid("3166a07a-ada2-4d3a-9af1-591683c31bcd"),
                            FollowingId = new Guid("2146ff4d-eabf-480e-ba8b-ca0ad915a33a")
                        },
                        new
                        {
                            FollowerId = new Guid("3166a07a-ada2-4d3a-9af1-591683c31bcd"),
                            FollowingId = new Guid("13fe2ce5-4f13-4ff6-b247-b9b12c365cfe")
                        },
                        new
                        {
                            FollowerId = new Guid("225ec745-cee9-4cc7-b687-83c1ab7d0bc3"),
                            FollowingId = new Guid("3166a07a-ada2-4d3a-9af1-591683c31bcd")
                        },
                        new
                        {
                            FollowerId = new Guid("3166a07a-ada2-4d3a-9af1-591683c31bcd"),
                            FollowingId = new Guid("225ec745-cee9-4cc7-b687-83c1ab7d0bc3")
                        },
                        new
                        {
                            FollowerId = new Guid("225ec745-cee9-4cc7-b687-83c1ab7d0bc3"),
                            FollowingId = new Guid("13fe2ce5-4f13-4ff6-b247-b9b12c365cfe")
                        },
                        new
                        {
                            FollowerId = new Guid("9b38eaf6-3af7-478e-8718-27583d270940"),
                            FollowingId = new Guid("3166a07a-ada2-4d3a-9af1-591683c31bcd")
                        },
                        new
                        {
                            FollowerId = new Guid("225ec745-cee9-4cc7-b687-83c1ab7d0bc3"),
                            FollowingId = new Guid("ebe3156c-d427-4d2c-8594-88fe30e74b57")
                        },
                        new
                        {
                            FollowerId = new Guid("13fe2ce5-4f13-4ff6-b247-b9b12c365cfe"),
                            FollowingId = new Guid("225ec745-cee9-4cc7-b687-83c1ab7d0bc3")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Instagram_Backend.Models.Comment", b =>
                {
                    b.HasOne("Instagram_Backend.Models.Comment", "ParentComment")
                        .WithMany()
                        .HasForeignKey("ParentCommentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Instagram_Backend.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instagram_Backend.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentComment");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Instagram_Backend.Models.Image", b =>
                {
                    b.HasOne("Instagram_Backend.Models.Post", "Post")
                        .WithMany("Images")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Instagram_Backend.Models.Like", b =>
                {
                    b.HasOne("Instagram_Backend.Models.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Instagram_Backend.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Instagram_Backend.Models.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Instagram_Backend.Models.Notification", b =>
                {
                    b.HasOne("Instagram_Backend.Models.User", "Actor")
                        .WithMany()
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Instagram_Backend.Models.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Instagram_Backend.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Instagram_Backend.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Comment");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Instagram_Backend.Models.Post", b =>
                {
                    b.HasOne("Instagram_Backend.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Instagram_Backend.Models.UserFollower", b =>
                {
                    b.HasOne("Instagram_Backend.Models.User", "Follower")
                        .WithMany("FollowingRelationships")
                        .HasForeignKey("FollowerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Instagram_Backend.Models.User", "Following")
                        .WithMany("FollowerRelationships")
                        .HasForeignKey("FollowingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Follower");

                    b.Navigation("Following");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Instagram_Backend.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Instagram_Backend.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instagram_Backend.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Instagram_Backend.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Instagram_Backend.Models.Post", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Instagram_Backend.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FollowerRelationships");

                    b.Navigation("FollowingRelationships");

                    b.Navigation("Likes");

                    b.Navigation("Notifications");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
