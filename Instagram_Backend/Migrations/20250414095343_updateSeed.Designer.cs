// <auto-generated />
using System;
using Instagram_Backend.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Instagram_Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250414095343_updateSeed")]
    partial class updateSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Instagram_Backend.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LikeCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("ParentCommentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<int>("ReplyCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentCommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d362cee1-39c2-4fce-a53d-43397ab6b184"),
                            Content = "Amazing view!",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 3,
                            PostId = new Guid("a1580aad-5bc7-45e4-8347-232570d1579b"),
                            ReplyCount = 1,
                            UserId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            Id = new Guid("8f425888-a589-444c-b274-258fa24e1561"),
                            Content = "Thanks! It was incredible.",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 1,
                            ParentCommentId = new Guid("d362cee1-39c2-4fce-a53d-43397ab6b184"),
                            PostId = new Guid("a1580aad-5bc7-45e4-8347-232570d1579b"),
                            ReplyCount = 0,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("34fc23fe-4af7-4619-9e1a-0325e3bbf34d"),
                            Content = "This looks delicious!",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 4,
                            PostId = new Guid("8dc7e07e-71dc-4677-ad0e-875f2bd59d77"),
                            ReplyCount = 1,
                            UserId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            Id = new Guid("b22eb11b-a224-4fc9-a6d0-ee1f3b177651"),
                            Content = "Can you share the recipe?",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            PostId = new Guid("8dc7e07e-71dc-4677-ad0e-875f2bd59d77"),
                            ReplyCount = 1,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("c87ddb1f-118e-4bf0-9a76-2e5fd32600f5"),
                            Content = "Sure, I'll DM you!",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 1,
                            ParentCommentId = new Guid("b22eb11b-a224-4fc9-a6d0-ee1f3b177651"),
                            PostId = new Guid("8dc7e07e-71dc-4677-ad0e-875f2bd59d77"),
                            ReplyCount = 0,
                            UserId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            Id = new Guid("e3e5419a-6fe7-4a5b-bb0e-6cb85723f874"),
                            Content = "Nice setup! What monitor is that?",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 1,
                            PostId = new Guid("8395d1f8-9394-4da6-ac04-d7d5eb4ee47d"),
                            ReplyCount = 1,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("74211123-b6d9-476d-9d09-f3806cbfbd2b"),
                            Content = "It's an LG 34\" ultrawide",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 0,
                            ParentCommentId = new Guid("e3e5419a-6fe7-4a5b-bb0e-6cb85723f874"),
                            PostId = new Guid("8395d1f8-9394-4da6-ac04-d7d5eb4ee47d"),
                            ReplyCount = 0,
                            UserId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            Id = new Guid("7c9445d5-5309-445f-bf36-3bfd32cbd1c1"),
                            Content = "This is incredible! Love the neon colors!",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 2,
                            PostId = new Guid("7a628109-d587-40f3-9900-2d5a6724d216"),
                            ReplyCount = 1,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("af9a62c2-2291-4502-b352-2fc02aa9d8c2"),
                            Content = "Thank you so much! Took me almost a week to finish.",
                            CreatedAt = new DateTime(2025, 3, 15, 1, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 1,
                            ParentCommentId = new Guid("7c9445d5-5309-445f-bf36-3bfd32cbd1c1"),
                            PostId = new Guid("7a628109-d587-40f3-9900-2d5a6724d216"),
                            ReplyCount = 0,
                            UserId = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2")
                        },
                        new
                        {
                            Id = new Guid("20d5358e-11fc-4446-8e39-ebcae0f40ad9"),
                            Content = "What's your favorite HIIT exercise?",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 1,
                            PostId = new Guid("9e460ac3-5486-4daa-a717-82ff17b09b70"),
                            ReplyCount = 1,
                            UserId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            Id = new Guid("1b179a0f-bfa4-43d5-8a77-7fa48444d5b8"),
                            Content = "Definitely burpees - they're brutal but effective!",
                            CreatedAt = new DateTime(2025, 3, 15, 2, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 2,
                            ParentCommentId = new Guid("20d5358e-11fc-4446-8e39-ebcae0f40ad9"),
                            PostId = new Guid("9e460ac3-5486-4daa-a717-82ff17b09b70"),
                            ReplyCount = 0,
                            UserId = new Guid("c2e18fc7-6492-4081-8c19-8ba5e7c42005")
                        },
                        new
                        {
                            Id = new Guid("6172141f-b5b1-4420-b245-5c844633a9a5"),
                            Content = "These designs are stunning! Will they be available in your online shop?",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 3,
                            PostId = new Guid("a881316f-dcd2-4a49-a621-0a5d3fa66b86"),
                            ReplyCount = 1,
                            UserId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            Id = new Guid("382c2432-5246-4fef-b5a0-2c5c2848ff1b"),
                            Content = "Yes! They'll be available next month. I'll share a discount code soon!",
                            CreatedAt = new DateTime(2025, 3, 15, 3, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 1,
                            ParentCommentId = new Guid("6172141f-b5b1-4420-b245-5c844633a9a5"),
                            PostId = new Guid("a881316f-dcd2-4a49-a621-0a5d3fa66b86"),
                            ReplyCount = 0,
                            UserId = new Guid("24005e30-4b5a-45b4-aab2-61aca02c8e7f")
                        },
                        new
                        {
                            Id = new Guid("c6df3203-8bf8-449f-aba8-f5c2e9845b93"),
                            Content = "That crust looks perfect! Would love to see your sourdough recipe.",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 2,
                            PostId = new Guid("aaefe87b-e5c5-4b29-b605-ac0de1d396ae"),
                            ReplyCount = 1,
                            UserId = new Guid("f10db540-8ab5-42fc-98c1-1d6670e98a68")
                        },
                        new
                        {
                            Id = new Guid("7a73cff3-6d43-4434-a777-133629767de7"),
                            Content = "I'll share it in my next post! It's all about the 24-hour fermentation.",
                            CreatedAt = new DateTime(2025, 3, 15, 1, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 1,
                            ParentCommentId = new Guid("c6df3203-8bf8-449f-aba8-f5c2e9845b93"),
                            PostId = new Guid("aaefe87b-e5c5-4b29-b605-ac0de1d396ae"),
                            ReplyCount = 0,
                            UserId = new Guid("1be6db51-a961-4adf-8902-9f7edd2d1d4c")
                        });
                });

            modelBuilder.Entity("Instagram_Backend.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("860e4830-81d0-48e5-b2eb-fa66bac4747b"),
                            Order = 1,
                            PostId = new Guid("a1580aad-5bc7-45e4-8347-232570d1579b"),
                            Url = "https://picsum.photos/id/1/800/800"
                        },
                        new
                        {
                            Id = new Guid("1234308d-61ea-493a-ab86-a9c0dce3175f"),
                            Order = 1,
                            PostId = new Guid("8dc7e07e-71dc-4677-ad0e-875f2bd59d77"),
                            Url = "https://picsum.photos/id/2/800/800"
                        },
                        new
                        {
                            Id = new Guid("1528e35f-181b-4655-b401-5fba6929eeb5"),
                            Order = 2,
                            PostId = new Guid("8dc7e07e-71dc-4677-ad0e-875f2bd59d77"),
                            Url = "https://picsum.photos/id/3/800/800"
                        },
                        new
                        {
                            Id = new Guid("61cad9dc-5130-45a3-ac8f-1312ae01dc4d"),
                            Order = 1,
                            PostId = new Guid("8395d1f8-9394-4da6-ac04-d7d5eb4ee47d"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("aa62ed32-8543-4137-8427-bcb75aa8eaff"),
                            Order = 1,
                            PostId = new Guid("359b2d41-56f5-4bea-95ae-9e5835b91c0b"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("51922d1e-a26a-4f14-b412-1b81c63b4741"),
                            Order = 1,
                            PostId = new Guid("d2e2a39d-5ede-4bbb-ad33-05d2af86f878"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("ae6aa320-39e7-42d1-a86d-c1a08dd531aa"),
                            Order = 2,
                            PostId = new Guid("d2e2a39d-5ede-4bbb-ad33-05d2af86f878"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("fcc56907-c4d5-4643-8130-9798a55f5a1b"),
                            Order = 3,
                            PostId = new Guid("d2e2a39d-5ede-4bbb-ad33-05d2af86f878"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("3573ffc6-bf63-4871-9e75-09ea6ad3a5e1"),
                            Order = 4,
                            PostId = new Guid("d2e2a39d-5ede-4bbb-ad33-05d2af86f878"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("2681d946-971e-465c-94b8-2d12d8b0bb58"),
                            Order = 1,
                            PostId = new Guid("f3d89927-4f0d-4678-99ce-c58643e163b1"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("8433b8ed-08c7-4d11-902e-52afe4261c91"),
                            Order = 1,
                            PostId = new Guid("9bfe2ca3-73ab-404f-8f8c-dd5004b84d8b"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("855c0349-cd22-4d4f-baa7-03ee0ab0e725"),
                            Order = 1,
                            PostId = new Guid("bbbad0c3-9758-4508-81d2-ba0f1b068b44"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("43873c2e-86fa-4f30-9871-9715a7b7ae6e"),
                            Order = 1,
                            PostId = new Guid("20711cd8-f1b2-49d7-8e98-3c65d40c07f3"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("11e56641-b4cf-4777-93c3-9dbf2048f6cd"),
                            Order = 1,
                            PostId = new Guid("ce491c2e-6e81-48dc-877c-0375aa73f2fd"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("3dd9184c-508f-4d0b-a586-5271ff1b10f7"),
                            Order = 1,
                            PostId = new Guid("bfb2c1f0-fb02-4a79-9922-0594b29add61"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("af98df1e-9c22-4b81-a4ef-2e42f0c8b82b"),
                            Order = 1,
                            PostId = new Guid("5c7e4574-4d60-4d7d-9b5e-eaaeb5ef391f"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("a8bbf75e-e451-49b7-b5c5-65c80754f7f9"),
                            Order = 1,
                            PostId = new Guid("4c19587a-dec7-449d-b335-30013ca29423"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("a0b79a40-7a82-4580-902a-c17f7c991dab"),
                            Order = 2,
                            PostId = new Guid("4c19587a-dec7-449d-b335-30013ca29423"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("253bba4d-b046-4e29-9076-ca1d5eeadb29"),
                            Order = 1,
                            PostId = new Guid("e1d49a77-b7f7-4570-b2d7-5da07d7dcdda"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("cbd41327-087c-4fe2-862a-1f4972055c5a"),
                            Order = 2,
                            PostId = new Guid("e1d49a77-b7f7-4570-b2d7-5da07d7dcdda"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("c10d839b-83cf-4d30-a3ae-a22ed28ba400"),
                            Order = 1,
                            PostId = new Guid("13c94976-8f59-4bbe-a8b4-05d840e166ed"),
                            Url = "https://picsum.photos/id/4/800/800"
                        },
                        new
                        {
                            Id = new Guid("fab243f1-cb12-489e-a238-48af72670de1"),
                            Order = 1,
                            PostId = new Guid("7a628109-d587-40f3-9900-2d5a6724d216"),
                            Url = "https://picsum.photos/id/10/800/800"
                        },
                        new
                        {
                            Id = new Guid("7b606428-b2cf-4250-8942-e9a58ac715a7"),
                            Order = 1,
                            PostId = new Guid("d02c3613-2722-46e8-ba79-f971a7db3ad8"),
                            Url = "https://picsum.photos/id/11/800/800"
                        },
                        new
                        {
                            Id = new Guid("bea6504a-11bb-4537-96b8-f223cb18e94b"),
                            Order = 1,
                            PostId = new Guid("9e460ac3-5486-4daa-a717-82ff17b09b70"),
                            Url = "https://picsum.photos/id/12/800/800"
                        },
                        new
                        {
                            Id = new Guid("ec65fab8-9a22-4c94-9498-ea73c561e168"),
                            Order = 1,
                            PostId = new Guid("5c9fc803-7ecc-4f9a-80d7-1d3dedb7fc21"),
                            Url = "https://picsum.photos/id/13/800/800"
                        },
                        new
                        {
                            Id = new Guid("8d2d237c-409a-46fa-a214-ee99dd42425f"),
                            Order = 2,
                            PostId = new Guid("5c9fc803-7ecc-4f9a-80d7-1d3dedb7fc21"),
                            Url = "https://picsum.photos/id/14/800/800"
                        },
                        new
                        {
                            Id = new Guid("6aaee03a-3e42-4a30-ba24-85200478f2ee"),
                            Order = 1,
                            PostId = new Guid("a881316f-dcd2-4a49-a621-0a5d3fa66b86"),
                            Url = "https://picsum.photos/id/15/800/800"
                        },
                        new
                        {
                            Id = new Guid("cd02ea67-e03b-4294-ba70-a9a4b50fa9ee"),
                            Order = 2,
                            PostId = new Guid("a881316f-dcd2-4a49-a621-0a5d3fa66b86"),
                            Url = "https://picsum.photos/id/16/800/800"
                        },
                        new
                        {
                            Id = new Guid("635df96f-ba20-4821-8b7d-9cba1d378304"),
                            Order = 3,
                            PostId = new Guid("a881316f-dcd2-4a49-a621-0a5d3fa66b86"),
                            Url = "https://picsum.photos/id/17/800/800"
                        },
                        new
                        {
                            Id = new Guid("bb2a35ec-003f-46a7-9a17-fc52dbd9da26"),
                            Order = 1,
                            PostId = new Guid("aaefe87b-e5c5-4b29-b605-ac0de1d396ae"),
                            Url = "https://picsum.photos/id/18/800/800"
                        },
                        new
                        {
                            Id = new Guid("00ebb873-6396-4888-815c-a403ca9f019e"),
                            Order = 1,
                            PostId = new Guid("f24e609d-3ba1-46dc-b8ec-5fae7bd04bbf"),
                            Url = "https://picsum.photos/id/19/800/800"
                        },
                        new
                        {
                            Id = new Guid("a6393363-40b4-4684-8602-5c7023cb48e0"),
                            Order = 2,
                            PostId = new Guid("f24e609d-3ba1-46dc-b8ec-5fae7bd04bbf"),
                            Url = "https://picsum.photos/id/20/800/800"
                        });
                });

            modelBuilder.Entity("Instagram_Backend.Models.Like", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CommentId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1685a5b1-1646-4357-bcc1-b762c284d7cd"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("a1580aad-5bc7-45e4-8347-232570d1579b"),
                            Type = 0,
                            UserId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            Id = new Guid("936c8eb2-69b1-456e-8c75-6818bc0a0571"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("a1580aad-5bc7-45e4-8347-232570d1579b"),
                            Type = 0,
                            UserId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            Id = new Guid("02b103a9-b9c1-406f-a73f-caa66cd8e7c8"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("8dc7e07e-71dc-4677-ad0e-875f2bd59d77"),
                            Type = 0,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("a21fee25-94d3-4465-be44-a0460cd55406"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("8dc7e07e-71dc-4677-ad0e-875f2bd59d77"),
                            Type = 0,
                            UserId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            Id = new Guid("a4877887-05e5-4906-80a1-135d7c8dd187"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("8395d1f8-9394-4da6-ac04-d7d5eb4ee47d"),
                            Type = 0,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("be508edf-5e51-4b15-8650-7fa68b7940f5"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("8395d1f8-9394-4da6-ac04-d7d5eb4ee47d"),
                            Type = 0,
                            UserId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            Id = new Guid("11f0875c-8046-4fd8-8c58-b8b0f7770979"),
                            CommentId = new Guid("d362cee1-39c2-4fce-a53d-43397ab6b184"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = 1,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("2cd1d1a2-0aa1-41b9-9435-d17211fad94e"),
                            CommentId = new Guid("d362cee1-39c2-4fce-a53d-43397ab6b184"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = 1,
                            UserId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            Id = new Guid("b3f49bb9-a629-4849-9aa2-26b93d4194a7"),
                            CommentId = new Guid("8f425888-a589-444c-b274-258fa24e1561"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = 1,
                            UserId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            Id = new Guid("6196b128-bc36-46f8-8312-ed1f4c1de347"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("7a628109-d587-40f3-9900-2d5a6724d216"),
                            Type = 0,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("4788a956-0d2c-414f-b7c5-e94a9fa65472"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("7a628109-d587-40f3-9900-2d5a6724d216"),
                            Type = 0,
                            UserId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            Id = new Guid("37841387-91b2-47ba-9416-4014fef6fa45"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("9e460ac3-5486-4daa-a717-82ff17b09b70"),
                            Type = 0,
                            UserId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            Id = new Guid("803e54d6-529d-47da-9f5b-534c844990e9"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("9e460ac3-5486-4daa-a717-82ff17b09b70"),
                            Type = 0,
                            UserId = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2")
                        },
                        new
                        {
                            Id = new Guid("480eb0d6-fc6f-4012-997b-2d9ae0b1697c"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("a881316f-dcd2-4a49-a621-0a5d3fa66b86"),
                            Type = 0,
                            UserId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            Id = new Guid("a3790a15-2257-48b8-8be7-55b7632874fd"),
                            CommentId = new Guid("7c9445d5-5309-445f-bf36-3bfd32cbd1c1"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = 1,
                            UserId = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2")
                        },
                        new
                        {
                            Id = new Guid("b6f3b6e4-5e74-4cd7-9082-a78beed00e42"),
                            CommentId = new Guid("6172141f-b5b1-4420-b245-5c844633a9a5"),
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = 1,
                            UserId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        });
                });

            modelBuilder.Entity("Instagram_Backend.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ActorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CommentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("current_timestamp");

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.HasIndex("CommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b02cc886-16ae-469c-9320-1589bc1e068e"),
                            ActorId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50"),
                            Content = "liked your post",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = true,
                            PostId = new Guid("a1580aad-5bc7-45e4-8347-232570d1579b"),
                            Type = 0,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("1c19169c-063b-405e-b64b-353f017bc2e4"),
                            ActorId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5"),
                            Content = "liked your post",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = true,
                            PostId = new Guid("a1580aad-5bc7-45e4-8347-232570d1579b"),
                            Type = 0,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("bd655d3c-5f52-4d75-a4b1-98fc33600c12"),
                            ActorId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50"),
                            CommentId = new Guid("d362cee1-39c2-4fce-a53d-43397ab6b184"),
                            Content = "commented on your post",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = true,
                            PostId = new Guid("a1580aad-5bc7-45e4-8347-232570d1579b"),
                            Type = 1,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("9c571c77-23b4-4c14-8a8e-29252ccccc3c"),
                            ActorId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79"),
                            CommentId = new Guid("8f425888-a589-444c-b274-258fa24e1561"),
                            Content = "replied to your comment",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = true,
                            PostId = new Guid("a1580aad-5bc7-45e4-8347-232570d1579b"),
                            Type = 1,
                            UserId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            Id = new Guid("12091fd8-110b-47eb-964b-1336456db8fa"),
                            ActorId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79"),
                            Content = "started following you",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = true,
                            Type = 2,
                            UserId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            Id = new Guid("798f53fe-aeb4-4035-8e4c-ddd199a65ca3"),
                            ActorId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79"),
                            Content = "liked your post",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = false,
                            PostId = new Guid("7a628109-d587-40f3-9900-2d5a6724d216"),
                            Type = 0,
                            UserId = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2")
                        },
                        new
                        {
                            Id = new Guid("3c2acfe7-bc70-4185-a3cc-1fe0479f6890"),
                            ActorId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50"),
                            Content = "liked your post",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = false,
                            PostId = new Guid("7a628109-d587-40f3-9900-2d5a6724d216"),
                            Type = 0,
                            UserId = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2")
                        },
                        new
                        {
                            Id = new Guid("787360b1-153d-45dd-b9cf-8f0b2bce5c25"),
                            ActorId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79"),
                            CommentId = new Guid("7c9445d5-5309-445f-bf36-3bfd32cbd1c1"),
                            Content = "commented on your post",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = true,
                            PostId = new Guid("7a628109-d587-40f3-9900-2d5a6724d216"),
                            Type = 1,
                            UserId = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2")
                        },
                        new
                        {
                            Id = new Guid("9ddc71a0-340c-41a1-90a9-0f9714cc72d6"),
                            ActorId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5"),
                            CommentId = new Guid("20d5358e-11fc-4446-8e39-ebcae0f40ad9"),
                            Content = "commented on your post",
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsRead = true,
                            PostId = new Guid("9e460ac3-5486-4daa-a717-82ff17b09b70"),
                            Type = 1,
                            UserId = new Guid("c2e18fc7-6492-4081-8c19-8ba5e7c42005")
                        });
                });

            modelBuilder.Entity("Instagram_Backend.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("CommentCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LikeCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1580aad-5bc7-45e4-8347-232570d1579b"),
                            Caption = "Beautiful sunset at the beach!",
                            CommentCount = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 15,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("8dc7e07e-71dc-4677-ad0e-875f2bd59d77"),
                            Caption = "My homemade pasta recipe 🍝",
                            CommentCount = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 42,
                            UserId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            Id = new Guid("8395d1f8-9394-4da6-ac04-d7d5eb4ee47d"),
                            Caption = "My homemade pasta recipe 🍝",
                            CommentCount = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 42,
                            UserId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            Id = new Guid("359b2d41-56f5-4bea-95ae-9e5835b91c0b"),
                            Caption = "Beautiful sunset at the beach!",
                            CommentCount = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 15,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("d2e2a39d-5ede-4bbb-ad33-05d2af86f878"),
                            Caption = "Beautiful sunset at the beach!",
                            CommentCount = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 15,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("f3d89927-4f0d-4678-99ce-c58643e163b1"),
                            Caption = "Beautiful sunset at the beach!",
                            CommentCount = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 15,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("9bfe2ca3-73ab-404f-8f8c-dd5004b84d8b"),
                            Caption = "Beautiful sunset at the beach!",
                            CommentCount = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 15,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("bbbad0c3-9758-4508-81d2-ba0f1b068b44"),
                            Caption = "Beautiful sunset at the beach!",
                            CommentCount = 2,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 15,
                            UserId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            Id = new Guid("20711cd8-f1b2-49d7-8e98-3c65d40c07f3"),
                            Caption = "New coding setup complete",
                            CommentCount = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 28,
                            UserId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            Id = new Guid("ce491c2e-6e81-48dc-877c-0375aa73f2fd"),
                            Caption = "My homemade pasta recipe 🍝",
                            CommentCount = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 42,
                            UserId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            Id = new Guid("bfb2c1f0-fb02-4a79-9922-0594b29add61"),
                            Caption = "New coding setup complete",
                            CommentCount = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 28,
                            UserId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            Id = new Guid("5c7e4574-4d60-4d7d-9b5e-eaaeb5ef391f"),
                            Caption = "New coding setup complete",
                            CommentCount = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 28,
                            UserId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            Id = new Guid("4c19587a-dec7-449d-b335-30013ca29423"),
                            Caption = "New coding setup complete",
                            CommentCount = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 28,
                            UserId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            Id = new Guid("e1d49a77-b7f7-4570-b2d7-5da07d7dcdda"),
                            Caption = "New coding setup complete",
                            CommentCount = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 28,
                            UserId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            Id = new Guid("13c94976-8f59-4bbe-a8b4-05d840e166ed"),
                            Caption = "New coding setup complete",
                            CommentCount = 4,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 28,
                            UserId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            Id = new Guid("7a628109-d587-40f3-9900-2d5a6724d216"),
                            Caption = "My latest digital art piece - cyberpunk cityscape 🌆",
                            CommentCount = 3,
                            CreatedAt = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 24,
                            UserId = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2")
                        },
                        new
                        {
                            Id = new Guid("d02c3613-2722-46e8-ba79-f971a7db3ad8"),
                            Caption = "New plant baby added to my collection! 🌱",
                            CommentCount = 5,
                            CreatedAt = new DateTime(2025, 3, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 31,
                            UserId = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2")
                        },
                        new
                        {
                            Id = new Guid("9e460ac3-5486-4daa-a717-82ff17b09b70"),
                            Caption = "Today's workout: 5 mile run and full-body HIIT 💪",
                            CommentCount = 4,
                            CreatedAt = new DateTime(2025, 3, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 18,
                            UserId = new Guid("c2e18fc7-6492-4081-8c19-8ba5e7c42005")
                        },
                        new
                        {
                            Id = new Guid("5c9fc803-7ecc-4f9a-80d7-1d3dedb7fc21"),
                            Caption = "Meal prep for the week! Healthy eating doesn't have to be boring 🥗",
                            CommentCount = 6,
                            CreatedAt = new DateTime(2025, 3, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 27,
                            UserId = new Guid("c2e18fc7-6492-4081-8c19-8ba5e7c42005")
                        },
                        new
                        {
                            Id = new Guid("a881316f-dcd2-4a49-a621-0a5d3fa66b86"),
                            Caption = "My latest fashion collection inspired by Mediterranean summers ☀️",
                            CommentCount = 7,
                            CreatedAt = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 45,
                            UserId = new Guid("24005e30-4b5a-45b4-aab2-61aca02c8e7f")
                        },
                        new
                        {
                            Id = new Guid("aaefe87b-e5c5-4b29-b605-ac0de1d396ae"),
                            Caption = "Homemade sourdough pizza with fresh basil and buffalo mozzarella 🍕",
                            CommentCount = 5,
                            CreatedAt = new DateTime(2025, 3, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 38,
                            UserId = new Guid("1be6db51-a961-4adf-8902-9f7edd2d1d4c")
                        },
                        new
                        {
                            Id = new Guid("f24e609d-3ba1-46dc-b8ec-5fae7bd04bbf"),
                            Caption = "Sunrise hike at Mount Rainier. Worth waking up at 4am! 🏔️",
                            CommentCount = 8,
                            CreatedAt = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            LikeCount = 52,
                            UserId = new Guid("f10db540-8ab5-42fc-98c1-1d6670e98a68")
                        });
                });

            modelBuilder.Entity("Instagram_Backend.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("ProfilePictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RefreshTokenExpiresAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79"),
                            AccessFailedCount = 0,
                            Bio = "Photography enthusiast and traveler",
                            ConcurrencyStamp = "f9f59a15-6e52-4e0a-ae4f-103ff9108ea8",
                            Email = "john@example.com",
                            EmailConfirmed = true,
                            FirstName = "John",
                            LastName = "Doe",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOHN@EXAMPLE.COM",
                            NormalizedUserName = "JOHNDOE",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/men/1.jpg",
                            SecurityStamp = "c04ef068-a56b-411f-8ef5-4ce1634d64db",
                            TwoFactorEnabled = false,
                            UserName = "johndoe"
                        },
                        new
                        {
                            Id = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50"),
                            AccessFailedCount = 0,
                            Bio = "Food blogger | Travel lover",
                            ConcurrencyStamp = "a2407ff9-0417-48f8-a310-a7612d28974e",
                            Email = "jane@example.com",
                            EmailConfirmed = true,
                            FirstName = "Jane",
                            LastName = "Smith",
                            LockoutEnabled = false,
                            NormalizedEmail = "JANE@EXAMPLE.COM",
                            NormalizedUserName = "JANESMITH",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/women/1.jpg",
                            SecurityStamp = "0ee12117-8112-43f1-9e10-6707910a119d",
                            TwoFactorEnabled = false,
                            UserName = "janesmith"
                        },
                        new
                        {
                            Id = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5"),
                            AccessFailedCount = 0,
                            Bio = "Software developer and coffee addict",
                            ConcurrencyStamp = "2d0e7e55-4e20-48b5-976a-ee019362b99a",
                            Email = "alex@example.com",
                            EmailConfirmed = true,
                            FirstName = "Alex",
                            LastName = "Johnson",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALEX@EXAMPLE.COM",
                            NormalizedUserName = "ALEXJ",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/men/2.jpg",
                            SecurityStamp = "4d13b318-1f37-466d-9e71-a06e39b4f0e7",
                            TwoFactorEnabled = false,
                            UserName = "alexj"
                        },
                        new
                        {
                            Id = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2"),
                            AccessFailedCount = 0,
                            Bio = "Digital artist and designer",
                            ConcurrencyStamp = "c322bf2b-7341-4ae3-8f99-ba6c5b7dc09f",
                            Email = "emily@example.com",
                            EmailConfirmed = true,
                            FirstName = "Emily",
                            LastName = "Chen",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMILY@EXAMPLE.COM",
                            NormalizedUserName = "EMILYC",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/women/2.jpg",
                            SecurityStamp = "9fa25bef-320e-4066-9674-27eeaae4d802",
                            TwoFactorEnabled = false,
                            UserName = "emilyc"
                        },
                        new
                        {
                            Id = new Guid("c2e18fc7-6492-4081-8c19-8ba5e7c42005"),
                            AccessFailedCount = 0,
                            Bio = "Fitness enthusiast and nutrition coach",
                            ConcurrencyStamp = "7c31ea13-62ba-4ac1-b205-7f54a43fa0ab",
                            Email = "michael@example.com",
                            EmailConfirmed = true,
                            FirstName = "Michael",
                            LastName = "Taylor",
                            LockoutEnabled = false,
                            NormalizedEmail = "MICHAEL@EXAMPLE.COM",
                            NormalizedUserName = "MICHAELT",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/men/3.jpg",
                            SecurityStamp = "91edc1c8-33ee-485b-b582-dcb6ee1d7ac2",
                            TwoFactorEnabled = false,
                            UserName = "michaelt"
                        },
                        new
                        {
                            Id = new Guid("24005e30-4b5a-45b4-aab2-61aca02c8e7f"),
                            AccessFailedCount = 0,
                            Bio = "Fashion designer and trend spotter",
                            ConcurrencyStamp = "ca67cf9f-5e46-4a26-8295-0f3ec6de65ca",
                            Email = "sophia@example.com",
                            EmailConfirmed = true,
                            FirstName = "Sophia",
                            LastName = "Garcia",
                            LockoutEnabled = false,
                            NormalizedEmail = "SOPHIA@EXAMPLE.COM",
                            NormalizedUserName = "SOPHIAG",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/women/3.jpg",
                            SecurityStamp = "0b8ccb92-1762-4952-9646-2d856844fee5",
                            TwoFactorEnabled = false,
                            UserName = "sophiag"
                        },
                        new
                        {
                            Id = new Guid("1be6db51-a961-4adf-8902-9f7edd2d1d4c"),
                            AccessFailedCount = 0,
                            Bio = "Chef and food photographer",
                            ConcurrencyStamp = "2e9edf8f-b83d-4014-aafe-353a2e7495d3",
                            Email = "david@example.com",
                            EmailConfirmed = true,
                            FirstName = "David",
                            LastName = "Wilson",
                            LockoutEnabled = false,
                            NormalizedEmail = "DAVID@EXAMPLE.COM",
                            NormalizedUserName = "DAVIDW",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/men/4.jpg",
                            SecurityStamp = "83a09dfd-0569-48cf-9324-d9246f6eb057",
                            TwoFactorEnabled = false,
                            UserName = "davidw"
                        },
                        new
                        {
                            Id = new Guid("f10db540-8ab5-42fc-98c1-1d6670e98a68"),
                            AccessFailedCount = 0,
                            Bio = "Travel blogger and outdoor enthusiast",
                            ConcurrencyStamp = "cc81b016-b98c-4356-a43d-7cbdd843e0a3",
                            Email = "olivia@example.com",
                            EmailConfirmed = true,
                            FirstName = "Olivia",
                            LastName = "Martinez",
                            LockoutEnabled = false,
                            NormalizedEmail = "OLIVIA@EXAMPLE.COM",
                            NormalizedUserName = "OLIVIAM",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9Yh999XbrReKfYRF6NzknIDvSmTjBuDq4KQkfqZweYlubTSIOeVLFmxSD3tar1IA==",
                            PhoneNumberConfirmed = false,
                            ProfilePictureUrl = "https://randomuser.me/api/portraits/women/4.jpg",
                            SecurityStamp = "5d89e3f0-b985-480b-8f27-ca42310a697b",
                            TwoFactorEnabled = false,
                            UserName = "oliviam"
                        });
                });

            modelBuilder.Entity("Instagram_Backend.Models.UserFollower", b =>
                {
                    b.Property<Guid>("FollowerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FollowingId")
                        .HasColumnType("uuid");

                    b.HasKey("FollowerId", "FollowingId");

                    b.HasIndex("FollowingId");

                    b.ToTable("UserFollowers");

                    b.HasData(
                        new
                        {
                            FollowerId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50"),
                            FollowingId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            FollowerId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5"),
                            FollowingId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            FollowerId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79"),
                            FollowingId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            FollowerId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79"),
                            FollowingId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            FollowerId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50"),
                            FollowingId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            FollowerId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5"),
                            FollowingId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            FollowerId = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2"),
                            FollowingId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            FollowerId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79"),
                            FollowingId = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2")
                        },
                        new
                        {
                            FollowerId = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2"),
                            FollowingId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            FollowerId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50"),
                            FollowingId = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2")
                        },
                        new
                        {
                            FollowerId = new Guid("c2e18fc7-6492-4081-8c19-8ba5e7c42005"),
                            FollowingId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5")
                        },
                        new
                        {
                            FollowerId = new Guid("979b390a-b414-4bf4-bce5-a0510e9103c5"),
                            FollowingId = new Guid("c2e18fc7-6492-4081-8c19-8ba5e7c42005")
                        },
                        new
                        {
                            FollowerId = new Guid("c2e18fc7-6492-4081-8c19-8ba5e7c42005"),
                            FollowingId = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2")
                        },
                        new
                        {
                            FollowerId = new Guid("24005e30-4b5a-45b4-aab2-61aca02c8e7f"),
                            FollowingId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50")
                        },
                        new
                        {
                            FollowerId = new Guid("4e1b1e0f-5c71-48ab-8bcb-f31760f94d50"),
                            FollowingId = new Guid("24005e30-4b5a-45b4-aab2-61aca02c8e7f")
                        },
                        new
                        {
                            FollowerId = new Guid("24005e30-4b5a-45b4-aab2-61aca02c8e7f"),
                            FollowingId = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2")
                        },
                        new
                        {
                            FollowerId = new Guid("1be6db51-a961-4adf-8902-9f7edd2d1d4c"),
                            FollowingId = new Guid("492e3957-5244-4a7a-9d4a-9efc8b121b79")
                        },
                        new
                        {
                            FollowerId = new Guid("1be6db51-a961-4adf-8902-9f7edd2d1d4c"),
                            FollowingId = new Guid("24005e30-4b5a-45b4-aab2-61aca02c8e7f")
                        },
                        new
                        {
                            FollowerId = new Guid("f10db540-8ab5-42fc-98c1-1d6670e98a68"),
                            FollowingId = new Guid("1be6db51-a961-4adf-8902-9f7edd2d1d4c")
                        },
                        new
                        {
                            FollowerId = new Guid("1be6db51-a961-4adf-8902-9f7edd2d1d4c"),
                            FollowingId = new Guid("f10db540-8ab5-42fc-98c1-1d6670e98a68")
                        },
                        new
                        {
                            FollowerId = new Guid("f10db540-8ab5-42fc-98c1-1d6670e98a68"),
                            FollowingId = new Guid("24005e30-4b5a-45b4-aab2-61aca02c8e7f")
                        },
                        new
                        {
                            FollowerId = new Guid("c2e18fc7-6492-4081-8c19-8ba5e7c42005"),
                            FollowingId = new Guid("1be6db51-a961-4adf-8902-9f7edd2d1d4c")
                        },
                        new
                        {
                            FollowerId = new Guid("f10db540-8ab5-42fc-98c1-1d6670e98a68"),
                            FollowingId = new Guid("dc3d8918-0070-47cd-aee7-bf6a43dfb6b2")
                        },
                        new
                        {
                            FollowerId = new Guid("24005e30-4b5a-45b4-aab2-61aca02c8e7f"),
                            FollowingId = new Guid("f10db540-8ab5-42fc-98c1-1d6670e98a68")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Instagram_Backend.Models.Comment", b =>
                {
                    b.HasOne("Instagram_Backend.Models.Comment", "ParentComment")
                        .WithMany()
                        .HasForeignKey("ParentCommentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Instagram_Backend.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instagram_Backend.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentComment");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Instagram_Backend.Models.Image", b =>
                {
                    b.HasOne("Instagram_Backend.Models.Post", "Post")
                        .WithMany("Images")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Instagram_Backend.Models.Like", b =>
                {
                    b.HasOne("Instagram_Backend.Models.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Instagram_Backend.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Instagram_Backend.Models.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Instagram_Backend.Models.Notification", b =>
                {
                    b.HasOne("Instagram_Backend.Models.User", "Actor")
                        .WithMany()
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Instagram_Backend.Models.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Instagram_Backend.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Instagram_Backend.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Comment");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Instagram_Backend.Models.Post", b =>
                {
                    b.HasOne("Instagram_Backend.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Instagram_Backend.Models.UserFollower", b =>
                {
                    b.HasOne("Instagram_Backend.Models.User", "Follower")
                        .WithMany("FollowingRelationships")
                        .HasForeignKey("FollowerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Instagram_Backend.Models.User", "Following")
                        .WithMany("FollowerRelationships")
                        .HasForeignKey("FollowingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Follower");

                    b.Navigation("Following");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Instagram_Backend.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Instagram_Backend.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instagram_Backend.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Instagram_Backend.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Instagram_Backend.Models.Post", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Instagram_Backend.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FollowerRelationships");

                    b.Navigation("FollowingRelationships");

                    b.Navigation("Likes");

                    b.Navigation("Notifications");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
